" Define a function that does all three tasks
function! Vimfuck()
  " Step 1: Replace all characters with Brainfuck-allowed characters
  " The allowed Brainfuck characters are kept, others are removed
  " %s/[^+\-\[\]<>.,]//g


  let lines = 
        \ ' '."\n".
        \ ' '."\n".
        \ '=============OUT==============='."\n".
        \ ''."\n".
        \ ''."\n".
        \ ''."\n".
        \ '==============================='."\n".
        \ '============DATA==============='."\n".
        \ '&'."\n".
        \ '0'."\n".
        \ '&'."\n".
        \ ''."\n".
        \ '=============INP==============='."\n".
        \ ''."\n".
        \ ''."\n".
        \ '=============ASCII=============='."\n".
        \ '1 {}'."\n".
        \ '2 {}'."\n".
        \ '3 {}'."\n".
        \ '4 {}'."\n".
        \ '5 {}'."\n".
        \ '6 {}'."\n".
        \ '7 {}'."\n".
        \ '8 {}'."\n".
        \ '9 {	}'."\n".
        \ '10 {'."\n".
        \ '}'."\n".
        \ '11 {}'."\n".
        \ '12 {}'."\n".
        \ '13 {'."\n".
        \ '<CR>}'."\n".
        \ '14 {}'."\n".
        \ '15 {}'."\n".
        \ '16 {}'."\n".
        \ '17 {}'."\n".
        \ '18 {}'."\n".
        \ '19 {}'."\n".
        \ '20 {}'."\n".
        \ '21 {}'."\n".
        \ '22 {}'."\n".
        \ '23 {}'."\n".
        \ '24 {}'."\n".
        \ '25 {}'."\n".
        \ '26 {}'."\n".
        \ '27 {}'."\n".
        \ '28 {}'."\n".
        \ '29 {}'."\n".
        \ '30 {}'."\n".
        \ '31 {}'."\n".
        \ '32 { }'."\n".
        \ '33 {!}'."\n".
        \ '34 {"}'."\n".
        \ '35 {#}'."\n".
        \ '36 {$}'."\n".
        \ '37 {%}'."\n".
        \ '38 {&}'."\n".
        \ '39 {''}'."\n".
        \ '40 {(}'."\n".
        \ '41 {)}'."\n".
        \ '42 {*}'."\n".
        \ '43 {+}'."\n".
        \ '44 {,}'."\n".
        \ '45 {-}'."\n".
        \ '46 {.}'."\n".
        \ '47 {/}'."\n".
        \ '48 {0}'."\n".
        \ '49 {1}'."\n".
        \ '50 {2}'."\n".
        \ '51 {3}'."\n".
        \ '52 {4}'."\n".
        \ '53 {5}'."\n".
        \ '54 {6}'."\n".
        \ '55 {7}'."\n".
        \ '56 {8}'."\n".
        \ '57 {9}'."\n".
        \ '58 {:}'."\n".
        \ '59 {;}'."\n".
        \ '60 {<}'."\n".
        \ '61 {=}'."\n".
        \ '62 {>}'."\n".
        \ '63 {?}'."\n".
        \ '64 {@}'."\n".
        \ '65 {A}'."\n".
        \ '66 {B}'."\n".
        \ '67 {C}'."\n".
        \ '68 {D}'."\n".
        \ '69 {E}'."\n".
        \ '70 {F}'."\n".
        \ '71 {G}'."\n".
        \ '72 {H}'."\n".
        \ '73 {I}'."\n".
        \ '74 {J}'."\n".
        \ '75 {K}'."\n".
        \ '76 {L}'."\n".
        \ '77 {M}'."\n".
        \ '78 {N}'."\n".
        \ '79 {O}'."\n".
        \ '80 {P}'."\n".
        \ '81 {Q}'."\n".
        \ '82 {R}'."\n".
        \ '83 {S}'."\n".
        \ '84 {T}'."\n".
        \ '85 {U}'."\n".
        \ '86 {V}'."\n".
        \ '87 {W}'."\n".
        \ '88 {X}'."\n".
        \ '89 {Y}'."\n".
        \ '90 {Z}'."\n".
        \ '91 {[}'."\n".
        \ '92 {\}'."\n".
        \ '93 {]}'."\n".
        \ '94 {^}'."\n".
        \ '95 {_}'."\n".
        \ '96 {`}'."\n".
        \ '97 {a}'."\n".
        \ '98 {b}'."\n".
        \ '99 {c}'."\n".
        \ '100 {d}'."\n".
        \ '101 {e}'."\n".
        \ '102 {f}'."\n".
        \ '103 {g}'."\n".
        \ '104 {h}'."\n".
        \ '105 {i}'."\n".
        \ '106 {j}'."\n".
        \ '107 {k}'."\n".
        \ '108 {l}'."\n".
        \ '109 {m}'."\n".
        \ '110 {n}'."\n".
        \ '111 {o}'."\n".
        \ '112 {p}'."\n".
        \ '113 {q}'."\n".
        \ '114 {r}'."\n".
        \ '115 {s}'."\n".
        \ '116 {t}'."\n".
        \ '117 {u}'."\n".
        \ '118 {v}'."\n".
        \ '119 {w}'."\n".
        \ '120 {x}'."\n".
        \ '121 {y}'."\n".
        \ '122 {z}'."\n".
        \ '123 {{}'."\n".
        \ '124 {|}'."\n".
        \ '125 {}}'."\n".
        \ '126 {~}'."\n".
        \ '127 {}'."\n".
        \ '=============MACRO============='."\n".
        \ 'run  @s@e@r'."\n".
        \ 'strt mi"eyl/MACRO<CR>/\Vce<CR>W"ey$`i'."\n".
        \ 'c+   ''d`il'."\n".
        \ 'c-   ''d`il'."\n".
        \ 'c[   ''d"eyl/MACRO<CR>/if1<CR>n:g/ev<CR>W"fy$`i@f'."\n".
        \ 'c]   %'."\n".
        \ 'c>   "eyl/ge<CR>W"gy$`djmd"eyl/MACRO<CR>/if2<CR>nn:.,$g/e<CR>W"fy$`d@f'."\n".
        \ 'c<   "eyl/ge<CR>W"gy$`dkmd"eyl/MACRO<CR>/if2<CR>nn:.,$g/e<CR>W"fy$`d@f'."\n".
        \ 'c.   `d0"by$/ASCII<CR>/b<CR>Wv%"by`oAb%v%:s/{\|}//g<CR>mo`il'."\n".
        \ 'c,'."\n".
        \ ''."\n".
        \ 'g> O0'."\n".
        \ 'g< o0'."\n".
        \ ''."\n".
        \ 'if1 l'."\n".
        \ '0v %l'."\n".
        \ ''."\n".
        \ 'if2 md`il'."\n".
        \ '& @gmd`il'."\n".
        \ ''."\n".
        \ ''."\n".
        \ ''."\n"
  for line in split(lines, "\n")
    call append(line('$'), line)
  endfor
  let @r = "/<CRct>lx"
  normal 17@r
  normal /DATAjjmd
  normal /OUTjjmo
  normal /strtW"sy$
  let @r = "@s@e@r"
  normal gg0mi@r
  normal /DATA
  .,$g/.*/d
endfunction
